rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // match /{document=**} {
    //   allow read, write: if true;
    // }
    include "functions/functions.rules";

    // TODO firestore rules for users
    // Users
    match /users/{studentId} {
      allow read, write: if true;
    }
    // Proposals
    match /proposals/{proposalId} {
      allow read, list: if request.auth != null;

      allow create: if (isStudent(request) && 
        request.resource.data.studentId == request.auth.uid) ||
        isTeacher(request) ||
        isAdmin(request) &&
        validProposalMod(request);

      allow update: if (isStudent(request) &&
        resource.data.studentId == null &&
        request.resource.data.studentId == request.auth.uid) ||
        isTeacher(request) ||
        isAdmin(request) &&
        validProposalMod(request);

      allow delete: if (isTeacher(request) &&
        resource.data.teacherId == request.auth.uid) ||
        isAdmin(request);
    }
    // TODO firestore rules for projects
    // Projects
    match /projects/{projectId} {
      allow create: if (isTeacher(request) &&
        request.resource.data.teacherId == request.auth.uid) ||
        isAdmin(request) &&
        validProjectMod(request);

      allow read, list: if true;
    }
  }
}